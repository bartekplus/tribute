{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}\n\nif (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}\n","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\n      {\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 13,\n        value: \"ENTER\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      }\n    ];\n  }\n\n  static modifiers() {\n    return [\n      \"CapsLock\",\n      \"Control\",\n      \"Fn\",\n      \"Hyper\",\n      \"Meta\",\n      \"OS\",\n      \"Super\",\n      \"Symbol\",\n      \"Win\"\n    ];\n  }\n\n  bind(element) {\n    element.boundKeydown = this.keydown.bind(element, this);\n    element.boundKeyup = this.keyup.bind(element, this);\n    element.boundInput = this.input.bind(element, this);\n\n    element.addEventListener(\"keydown\", element.boundKeydown, true);\n    element.addEventListener(\"keyup\", element.boundKeyup, true);\n    element.addEventListener(\"input\", element.boundInput, true);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeydown, true);\n    element.removeEventListener(\"keyup\", element.boundKeyup, true);\n    element.removeEventListener(\"input\", element.boundInput, true);\n\n    delete element.boundKeydown;\n    delete element.boundKeyup;\n    delete element.boundInput;\n  }\n\n  keydown(instance, event) {\n    if (instance.shouldDeactivate(event)) {\n      instance.tribute.hideMenu();\n    }\n\n    let element = this;\n    instance.commandEvent = false;\n\n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          return;\n        }\n      });\n    }\n\n    if (instance.tribute.isActive)\n    {\n      TributeEvents.keys().forEach(o => {\n        if (o.key === event.keyCode) {\n          instance.commandEvent = true;\n          instance.callbacks()[o.value.toLowerCase()](event, element);\n        }\n      });\n    }\n  }\n\n  input(instance, event) {\n    instance.inputEvent = event instanceof CustomEvent ? false : true;\n    instance.commandEvent = !instance.inputEvent;\n    instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    let tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      let li = event.target;\n      event.preventDefault();\n      event.stopPropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        li = li.parentNode;\n        if (!li || li === tribute.menu) {\n          throw new Error(\"cannot find the <li> container for the click\");\n        }\n      }\n      tribute.hideMenu();\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      tribute.current.externalTrigger = false;\n      setTimeout(() => tribute.hideMenu());\n    }\n  }\n\n  keyup(instance, event) {\n    if (instance.inputEvent) {\n      instance.inputEvent = false;\n    }\n    \n    instance.updateSelection(this);\n    \n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          return;\n        }\n      });\n    }\n\n    if (event.keyCode === 27) return;\n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.commandEvent = true;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    if (!instance.tribute.isActive) {\n      if (instance.tribute.autocompleteMode) {\n        instance.callbacks().triggerChar(event, this, \"\");\n      } else {\n        let keyCode = instance.getKeyCode(instance, this, event);\n\n        if (isNaN(keyCode) || !keyCode) return;\n\n        let trigger = instance.tribute.triggers().find(trigger => {\n          return trigger.charCodeAt(0) === keyCode;\n        });\n\n        if (typeof trigger !== \"undefined\") {\n          instance.callbacks().triggerChar(event, this, trigger);\n        }\n      }\n    }\n\n    if (\n      instance.tribute.current.mentionText.length <\n      instance.tribute.current.collection.menuShowMinLength\n    ) {\n      return;\n    }\n\n    if (\n      ((instance.tribute.current.trigger ||\n        instance.tribute.autocompleteMode) &&\n        instance.commandEvent === false) ||\n      (instance.tribute.isActive && event.keyCode === 8)\n    ) {\n      instance.tribute.showMenuFor(this, true);\n    }\n  }\n\n  shouldDeactivate(event) {\n    if (!this.tribute.isActive) return false;\n\n    //if (this.tribute.current.mentionText.length === 0) {\n      let eventKeyPressed = false;\n      TributeEvents.keys().forEach(o => {\n        if (event.keyCode === o.key) eventKeyPressed = true;\n      });\n\n      if (eventKeyPressed) return false;\n    //}\n    \n    if (this.tribute.isActive)\n    {\n      return true;\n    }\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else {\n      return false;\n    }\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.fullText = info.fullText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n      this.tribute.current.info = info;\n    }\n  }\n\n  callbacks() {\n    return {\n      triggerChar: (e, el, trigger) => {\n        let tribute = this.tribute;\n        tribute.current.trigger = trigger;\n\n        let collectionItem = tribute.collection.find(item => {\n          return item.trigger === trigger;\n        });\n\n        tribute.current.collection = collectionItem;\n\n        if (\n          tribute.current.mentionText.length >=\n            tribute.current.collection.menuShowMinLength &&\n          tribute.inputEvent\n        ) {\n          tribute.showMenuFor(el, true);\n        }\n      },\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.hideMenu();\n          this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.tribute.menuSelected--;\n            this.setActiveLi();\n          } else if (selected === 0) {\n            this.tribute.menuSelected = count - 1;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.tribute.menuSelected++;\n            this.setActiveLi();\n          } else if (count === selected) {\n            this.tribute.menuSelected = 0;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;\n","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.showMenuFor(this.tribute.current.element, false);\n        }\n      },\n      300,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.range.positionMenuAtCaret(true);\n        }\n      },\n      300,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.display = `block`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\n            }\n\n            this.tribute.menu.style.top = `${coordinates.top}px`;\n            this.tribute.menu.style.left = `${coordinates.left}px`;\n            this.tribute.menu.style.right = `${coordinates.right}px`;\n            this.tribute.menu.style.bottom = `${coordinates.bottom}px`;\n            this.tribute.menu.style.position = `absolute`;\n            this.tribute.menu.style.display = `block`;\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n            window.setTimeout(() => {\n                let menuDimensions = {\n                   width: this.tribute.menu.offsetWidth,\n                   height: this.tribute.menu.offsetHeight\n                }\n                let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n                let menuIsOffScreenHorizontally = window.innerWidth > menuDimensions.width && (menuIsOffScreen.left || menuIsOffScreen.right)\n                let menuIsOffScreenVertically = window.innerHeight > menuDimensions.height && (menuIsOffScreen.top || menuIsOffScreen.bottom)\n                if (menuIsOffScreenHorizontally || menuIsOffScreenVertically) {\n                    this.tribute.menu.style.display = 'none'\n                    this.positionMenuAtCaret(scrollTo)\n                }\n            }, 0)\n\n        } else {\n            this.tribute.menu.style.display = 'none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.tribute.current.info;//this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: {\n                    item: item,\n                    instance: context,\n                    context: info,\n                    event: originalEvent,\n                }\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + textSuffix.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                text += textSuffix\n                let endPos = info.mentionPosition + info.mentionText.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.pasteHtml(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\n            context.element.dispatchEvent(replaceEvent)\n            context.element.focus()\n        }\n    }\n\n    pasteHtml(html, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n\n        sel.anchorNode.nodeValue = sel.anchorNode.nodeValue.substring(0, startPos)\n            + html + sel.anchorNode.nodeValue.substring(endPos, sel.anchorNode.nodeValue.length)\n        range.setStart(sel.anchorNode, startPos + html.length)\n        range.collapse(true)\n        sel.removeAllRanges()\n        sel.addRange(range)\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return window.getSelection()\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0, startPos)\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                }\n            }\n        }\n\n        return text\n    }\n\n    getLastWordInText(text) {\n        var wordsArray;\n        if (this.tribute.autocompleteSeparator) {\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\n        } else {\n            wordsArray = text.split(/\\s+/);\n        }\n        var wordsCount = wordsArray.length - 1;\n        return wordsArray[wordsCount];\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n                mentionText: lastWordOfEffectiveRange,\n                fullText: effectiveRange,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /\\s/.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n       this.tribute.menu.style.top = `0px`;\n       this.tribute.menu.style.left = `0px`;\n       this.tribute.menu.style.right = null;\n       this.tribute.menu.style.bottom = null;\n       this.tribute.menu.style.position = `fixed`;\n       this.tribute.menu.style.visibility = `hidden`;\n       this.tribute.menu.style.display = `block`;\n\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.display = `none`\n       this.tribute.menu.style.visibility = `visible`;\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        // position off-screen\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        if (isFirefox) {\n            style.width = `${(parseInt(computed.width) - 2)}px`\n            if (element.scrollHeight > parseInt(computed.height))\n                style.overflowY = 'scroll'\n        } else {\n            style.overflow = 'hidden'\n        }\n\n        div.textContent = element.value.substring(0, position)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        let span = this.getDocument().createElement('span')\n        span.textContent = element.value.substring(position) || '.'\n        div.appendChild(span)\n\n        let rect = element.getBoundingClientRect()\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let top = 0;\n        let left = 0;\n        if (this.menuContainerIsBody) {\n          top = rect.top;\n          left = rect.left;\n        }\n\n        let coordinates = {\n            top: top + windowTop + span.offsetTop + parseInt(computed.borderTopWidth) + parseInt(computed.fontSize) - element.scrollTop,\n            left: left + windowLeft + span.offsetLeft + parseInt(computed.borderLeftWidth)\n        }\n\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n\n        let menuDimensions = this.getMenuDimensions()\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n        if (menuIsOffScreen.right) {\n            coordinates.right = windowWidth - coordinates.left\n            coordinates.left = 'auto'\n        }\n\n        let parentHeight = this.tribute.menuContainer\n            ? this.tribute.menuContainer.offsetHeight\n            : this.getDocument().body.offsetHeight\n\n        if (menuIsOffScreen.bottom) {\n            let parentRect = this.tribute.menuContainer\n                ? this.tribute.menuContainer.getBoundingClientRect()\n                : this.getDocument().body.getBoundingClientRect()\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\n\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top - span.offsetTop)\n            coordinates.top = 'auto'\n        }\n\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        if (menuIsOffScreen.left) {\n            coordinates.left = windowWidth > menuDimensions.width\n                ? windowLeft + windowWidth - menuDimensions.width\n                : windowLeft\n            delete coordinates.right\n        }\n        if (menuIsOffScreen.top) {\n            coordinates.top = windowHeight > menuDimensions.height\n                ? windowTop + windowHeight - menuDimensions.height\n                : windowTop\n            delete coordinates.bottom\n        }\n\n        this.getDocument().body.removeChild(div)\n        return coordinates\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let left = rect.left\n        let top = rect.top\n\n        let coordinates = {\n            left: left + windowLeft,\n            top: top + rect.height + windowTop\n        }\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n\n        let menuDimensions = this.getMenuDimensions()\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        const menuContainer = this.tribute.menuContainer ? this.tribute.menuContainer : document.body;\n\n        if (menuIsOffScreen.right) {\n            coordinates.left = 'auto'\n            coordinates.right = windowWidth - rect.left - windowLeft\n        }\n\n        if (menuIsOffScreen.bottom) {\n            let windowHeight = window.innerHeight\n            let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n            let scrollHeight = window.innerHeight - document.documentElement.clientHeight;\n            coordinates.top = windowHeight + windowTop - scrollHeight - menuDimensions.height;\n        }\n\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        if (menuIsOffScreen.left) {\n            coordinates.left = windowWidth > menuDimensions.width\n                ? windowLeft + windowWidth - menuDimensions.width\n                : windowLeft\n            delete coordinates.right\n        }\n        if (menuIsOffScreen.top) {\n            coordinates.top = windowHeight > menuDimensions.height\n                ? windowTop + windowHeight - menuDimensions.height\n                : windowTop\n            delete coordinates.bottom\n        }\n\n        if (!this.menuContainerIsBody) {\n            coordinates.left = coordinates.left ? coordinates.left - menuContainer.offsetLeft : coordinates.left\n            coordinates.top = coordinates.top ? coordinates.top - menuContainer.offsetTop : coordinates.top\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best = { score : 0, cache : []}\n        let temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    loadingItemTemplate = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 0,\n    keys = null\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.inputEvent = false;\n    this.isActive = false;\n    this.activationPending = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n    if (keys)\n    {\n      TributeEvents.keys = keys;\n    }\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          // useful for when values is an async function\n          loadingItemTemplate: loadingItemTemplate,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          loadingItemTemplate: item.loadingItemTemplate,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (!element.contentEditable) {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName + \", not contentEditable\");\n      }\n    }\n  }\n\n  createMenu(containerClass, element) {\n    let properties = ['fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n    'fontSizeAdjust', 'fontFamily'];\n    let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.setAttribute(\"tabindex\", \"0\"); \n    wrapper.appendChild(ul);\n    wrapper.style.fontSize = Math.round(parseInt(computed.fontSize) * 0.9) + 'px';\n\n    properties.forEach(prop => {\n      wrapper.style[prop] = computed[prop]\n     })\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass, element);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.activationPending = true;\n    this.menuSelected = 0;\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = values => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.activationPending) {\n        return;\n      }\n      this.activationPending = false;\n      // Element is no longer in focus - don't show menu\n      if (document.activeElement !== this.current.element)\n      {\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      this.current.filteredItems = items;\n\n      let ul = this.menu.querySelector(\"ul\");\n      let showMenu = false;\n\n      if (!items.length) {\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          showMenu = false;\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n            showMenu = true;\n        }\n      }\n      else\n      {\n        ul.innerHTML = \"\";\n        let fragment = this.range.getDocument().createDocumentFragment();\n\n        items.forEach((item, index) => {\n          let li = this.range.getDocument().createElement(\"li\");\n          li.setAttribute(\"data-index\", index);\n          li.className = this.current.collection.itemClass;\n          li.addEventListener(\"mousemove\", e => {\n            let [li, index] = this._findLiTarget(e.target);\n            if (e.movementY !== 0) {\n              this.events.setActiveLi(index);\n            }\n          });\n          if (this.menuSelected === index) {\n            li.classList.add(this.current.collection.selectClass);\n          }\n          li.innerHTML = this.current.collection.menuItemTemplate(item);\n          fragment.appendChild(li);\n        });\n        ul.appendChild(fragment);\n        showMenu = true;\n      }\n      if (showMenu)\n      {\n        this.isActive = true;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      if (this.current.collection.loadingItemTemplate) {\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n\n      this.current.collection.values(this.current.fullText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    this.activationPending = false;\n    if (this.menu && this.isActive) {\n      this.menu.style.display = \"none\";\n      this.isActive = false;\n      this.current.element.focus();\n      this.activationPending = false;\n    }\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index)) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","hideMenu","commandEvent","KeyboardEvent","modifiers","forEach","getModifierState","isActive","keys","key","keyCode","callbacks","toLowerCase","inputEvent","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","fullText","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","positionMenuAtCaret","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","display","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","position","scrollIntoView","menuDimensions","width","offsetWidth","offsetHeight","menuIsOffScreen","isMenuOffScreen","menuIsOffScreenHorizontally","innerWidth","menuIsOffScreenVertically","innerHeight","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","nodeValue","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","autocompleteSeparator","split","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","trim","regex","str","reversedStr","join","cidx","firstChar","match","triggerIdx","windowWidth","windowHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","menuBottom","menuLeft","Math","floor","ceil","dimensions","visibility","flipped","isFirefox","mozInnerScreenX","div","createElement","id","body","appendChild","computed","whiteSpace","wordWrap","prop","overflowY","overflow","replace","span","rect","menuContainerIsBody","offsetTop","borderTopWidth","fontSize","offsetLeft","borderLeftWidth","getMenuDimensions","parentHeight","scrollStillAvailable","removeChild","selectedNodePosition","clientHeight","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","temp","indexOf","best","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","activationPending","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","console","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","round","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","activeElement","items","querySelector","showMenu","innerHTML","fragment","createDocumentFragment","_findLiTarget","movementY","noMatchEvent","collectionIndex","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","deleteContents","textNode","createTextNode","insertNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"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"}