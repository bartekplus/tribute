{"version":3,"file":"tribute.min.js","sources":["../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["/*eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }]*/\nclass TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\"Tab\", \"Enter\", \"Escape\", \"ArrowUp\", \"ArrowDown\", \"Backspace\"];\n  }\n\n  static modifiers() {\n    return [\n      \"CapsLock\",\n      \"Control\",\n      \"Fn\",\n      \"Hyper\",\n      \"Meta\",\n      \"OS\",\n      \"Super\",\n      \"Symbol\",\n      \"Win\",\n    ];\n  }\n\n  bind(element) {\n    const KEY_EVENT_TIMEOUT_MS = 32;\n    element.boundKeyDown = this.tribute.debounce(\n      this.keydown.bind(element, this),\n      KEY_EVENT_TIMEOUT_MS\n    );\n    element.boundKeyUpInput = this.tribute.debounce(\n      this.input.bind(element, this),\n      KEY_EVENT_TIMEOUT_MS\n    );\n\n    element.addEventListener(\"keydown\", element.boundKeyDown, true);\n    // element.addEventListener(\"keyup\", element.boundKeyUpInput, true);\n    element.addEventListener(\"input\", element.boundKeyUpInput, true);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeyDown, true);\n    // element.removeEventListener(\"keyup\", element.boundKeyUpInput, true);\n    element.removeEventListener(\"input\", element.boundKeyUpInput, true);\n\n    delete element.boundKeyDown;\n    delete element.boundKeyUpInput;\n  }\n\n  keydown(instance, event) {\n    let controlKeyPressed = false;\n    let keyProcessed = false;\n\n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach((o) => {\n        if (event.getModifierState(o)) {\n          controlKeyPressed = true;\n          return;\n        }\n      });\n    }\n\n    if (!controlKeyPressed) {\n      TributeEvents.keys().forEach((key) => {\n        if (\n          key === event.code &&\n          // Special handling of Backspace\n          (instance.tribute.isActive || event.code == \"Backspace\")) {\n            instance.callbacks()[key](event, this);\n            keyProcessed = true;\n            return;\n        }\n      });\n    }\n\n    if (!keyProcessed) {\n      instance.tribute.lastReplacement = null;\n      instance.tribute.hideMenu();\n    }\n  }\n\n  input(instance, event) {\n    const cEvent = event instanceof CustomEvent;\n    const iEvent = event instanceof InputEvent;\n    const iEventHandle = iEvent && (event.inputType == \"insertText\"\n      || event.inputType == \"insertCompositionText\"\n      || event.inputType.startsWith(\"deleteContent\"));\n\n    if (cEvent) {\n      return;\n    }\n    if (iEvent && !iEventHandle) {\n      return;\n    }\n    \n    instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    const tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      let li = event.target;\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        li = li.parentNode;\n        if (!li || li === tribute.menu) {\n          throw new Error(\"cannot find the <li> container for the click\");\n        }\n      }\n\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n    } else {\n      tribute.hideMenu();\n    }\n  }\n\n  keyup(instance, event) {\n    // Check for modifiers keys\n    if (event instanceof KeyboardEvent) {\n      if (event.key && event.key.length > 1) {\n        // Not a Character exit early\n        return;\n      }\n\n      let controlKeyPressed = false;\n      TributeEvents.modifiers().forEach((o) => {\n        if (event.getModifierState(o)) {\n          controlKeyPressed = true;\n          return;\n        }\n      });\n      // Check for control keys\n      TributeEvents.keys().forEach((key) => {\n        if (key === event.code) {\n          controlKeyPressed = true;\n          return;\n        }\n      });\n      if (controlKeyPressed) return;\n    }\n\n    if (!instance.updateSelection(this)) return;\n\n    const keyCode = instance.getKeyCode(event);\n    // Exit if no keyCode\n    if (isNaN(keyCode)) {\n      return;\n    }\n\n    if (!instance.tribute.autocompleteMode) {\n      const trigger = instance.tribute.triggers().find((trigger) => {\n        return trigger.charCodeAt(0) === keyCode;\n      });\n      if (!trigger) return;\n      const collection = instance.tribute.collection.find((item) => {\n        return item.trigger === trigger;\n      });\n      if (!collection) return;\n      if (\n        collection.menuShowMinLength >\n        instance.tribute.current.mentionText.length\n      )\n        return;\n      instance.tribute.current.collection = collection;\n    } else {\n      instance.tribute.current.collection = instance.tribute.collection[0];\n    }\n\n    instance.tribute.showMenuFor(this, true);\n  }\n\n  getKeyCode(event) {\n    const keyCode = event.keyCode || event.which || event.code;\n    if (keyCode) {\n      return keyCode;\n    }\n    if (event instanceof InputEvent && event.data) {\n      return event.data.charCodeAt(event.data.length - 1);\n    }\n    if (this.tribute.current.mentionTriggerChar) {\n      return this.tribute.current.mentionTriggerChar.charCodeAt(0);\n    }\n    if (this.tribute.current.mentionText) {\n      return this.tribute.current.mentionText.charCodeAt(\n          this.tribute.current.mentionText.length - 1);\n    }\n\n    return NaN;\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    const info = this.tribute.range.getTriggerInfo(\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.mentionTriggerChar = info.mentionTriggerChar;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.mentionPosition = info.mentionPosition;\n      this.tribute.current.fullText = info.fullText;\n      this.tribute.current.nextChar = info.nextChar;\n      return true;\n    }\n\n    return false;\n  }\n\n  callbacks() {\n    return {\n      Backspace: (e, _el) => {\n        if (this.tribute.lastReplacement) {\n          if (this.tribute.events.updateSelection(_el) &&\n              this.tribute.current.mentionPosition ==\n              (this.tribute.lastReplacement.mentionPosition + this.tribute.lastReplacement.content.length)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            this.tribute.current = {...this.tribute.lastReplacement};\n            this.tribute.current.mentionText =this.tribute.lastReplacement.content;\n            this.tribute.replaceText(this.tribute.lastReplacement.mentionText, e, null);\n          }\n          this.tribute.lastReplacement = null;\n          this.tribute.current = {};\n        }\n        this.tribute.hideMenu();\n      },\n      Enter: (e, _el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n        }\n      },\n      Escape: (e, _el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          this.tribute.hideMenu();\n        }\n      },\n      Tab: (e, el) => {\n        // choose first match\n        this.callbacks().Enter(e, el);\n      },\n      Space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().Enter(e, el);\n          } else {\n            this.tribute.hideMenu();\n          }\n        }\n      },\n      ArrowUp: (e, _el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          const count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.setActiveLi(selected - 1);\n          } else if (selected === 0) {\n            this.setActiveLi(count - 1);\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      ArrowDown: (e, _el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          const count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.setActiveLi(selected + 1);\n          } else if (count === selected) {\n            this.setActiveLi(0);\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n    };\n  }\n\n  setActiveLi(index) {\n    const lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    this.tribute.menuSelected = index;\n\n    for (let i = 0; i < length; i++) {\n      const li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        const liClientRect = li.getBoundingClientRect();\n        const menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          const scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          const scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n}\n\nexport default TributeEvents;\n","/*eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }]*/\n\nclass TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(_menu) {\n    const DEBOUNCE_TIMEOUT_MS = 100;\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.tribute.debounce(() => {\n      this.tribute.hideMenu();\n    }, DEBOUNCE_TIMEOUT_MS);\n    this.windowResizeEvent = this.tribute.debounce(() => {\n      this.tribute.hideMenu();\n    }, DEBOUNCE_TIMEOUT_MS);\n\n    this.windowBlurEvent = () => {\n      this.tribute.hideMenu();\n    };\n\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n    window.addEventListener(\"blur\", this.windowBlurEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(_menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n    window.removeEventListener(\"blur\", this.windowBlurEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n}\n\nexport default TributeMenuEvents;\n","/*eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }]*/\n\n// Thanks to https://github.com/jeff-collins/ment.io\n\nclass TributeRange {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.range = this;\n  }\n\n  getDocument() {\n    let iframe;\n    if (this.tribute.current.collection) {\n      iframe = this.tribute.current.collection.iframe;\n    }\n\n    if (!iframe) {\n      return document;\n    }\n\n    return iframe.contentWindow.document;\n  }\n\n  positionMenuAtCaret(scrollTo) {\n    const context = this.tribute.current;\n    let coordinates;\n\n    if (!this.tribute.positionMenu) {\n      this.tribute.menu.style.display = `block`;\n      return;\n    }\n\n    if (!this.isContentEditable(context.element)) {\n      coordinates = this.getTextAreaOrInputUnderlinePosition(\n        context.element,\n        context.mentionPosition + context.mentionText.length\n      );\n    } else {\n      coordinates = this.getContentEditableCaretPosition(\n        context.mentionPosition + context.mentionText.length\n      );\n    }\n\n    this.tribute.menu.style.top = `${coordinates.top}px`;\n    this.tribute.menu.style.left = `${coordinates.left}px`;\n    this.tribute.menu.style.right = `${coordinates.right}px`;\n    this.tribute.menu.style.bottom = `${coordinates.bottom}px`;\n    this.tribute.menu.style[\"max-heigh\"] = `${coordinates.maxHeight || 500}px`;\n    this.tribute.menu.style[\"max-width\"] = `${coordinates.maxWidth || 300}px`;\n    this.tribute.menu.style.position = `${coordinates.position || \"absolute\"}`;\n    this.tribute.menu.style.display = `block`;\n\n    if (coordinates.left === \"auto\") {\n      this.tribute.menu.style.left = \"auto\";\n    }\n\n    if (coordinates.top === \"auto\") {\n      this.tribute.menu.style.top = \"auto\";\n    }\n\n    if (scrollTo) this.scrollIntoView();\n  }\n\n  replaceTriggerText(text, originalEvent, item) {\n    const context = this.tribute.current;\n    const detail = {\n      item: item,\n      context: context,\n      event: originalEvent,\n      text: text,\n    };\n    const replaceEvent = new CustomEvent(\"tribute-replaced\");\n\n    if (!this.isContentEditable(context.element)) {\n      const myField = this.tribute.current.element;\n      const textSuffix =\n        typeof this.tribute.replaceTextSuffix === \"string\"\n          ? this.tribute.replaceTextSuffix\n          : \" \";\n      text = this.stripHtml(text);\n      text += textSuffix;\n      const startPos = context.mentionPosition;\n      let endPos =\n        context.mentionPosition +\n        context.mentionText.length +\n        textSuffix.length;\n      if (!this.tribute.autocompleteMode) {\n        endPos += context.mentionTriggerChar.length - 1;\n      }\n      myField.value =\n        myField.value.substring(0, startPos) +\n        text +\n        myField.value.substring(endPos, myField.value.length);\n      myField.selectionStart = startPos + text.length;\n      myField.selectionEnd = startPos + text.length;\n    } else {\n      const textSuffix =\n        typeof this.tribute.replaceTextSuffix === \"string\"\n          ? this.tribute.replaceTextSuffix\n          : \"\\xA0\";\n      text += textSuffix;\n      this.pasteContentEditable(\n        text,\n        context.mentionText.length + context.mentionTriggerChar.length\n      );\n    }\n\n    context.element.dispatchEvent(\n      new CustomEvent(\"input\", { bubbles: true, detail: detail })\n    );\n    context.element.dispatchEvent(replaceEvent);\n  }\n\n  pasteContentEditable(html, numOfCharsToRemove) {\n    const { sel, range } = this.getContentEditableSelectionStart(true);\n    if (sel) {\n      const strippedText = this.stripHtml(html);\n      const isHTML = html !== strippedText;\n      const useSimpleReplace =\n        !isHTML &&\n        sel.anchorOffset >= numOfCharsToRemove &&\n        sel.anchorOffset <= sel.anchorNode.nodeValue.length;\n      if (useSimpleReplace) {\n        this.pasteText(sel, range, strippedText, numOfCharsToRemove);\n      } else {\n        this.pasteHtml(sel, range, html, numOfCharsToRemove);\n      }\n    }\n  }\n\n  pasteText(sel, range, text, numOfCharsToRemove) {\n    const pre = sel.anchorNode.nodeValue.substring(\n      0,\n      sel.anchorOffset - numOfCharsToRemove\n    );\n    const post = sel.anchorNode.nodeValue.substring(\n      sel.anchorOffset,\n      sel.anchorNode.nodeValue.length\n    );\n    sel.anchorNode.nodeValue = pre + text + post;\n    range.setStart(sel.anchorNode, pre.length + text.length);\n    range.collapse(true);\n    sel.removeAllRanges();\n    sel.addRange(range);\n    sel.collapseToEnd();\n  }\n\n  pasteHtml(sel, _range, html, numOfCharsToRemove) {\n    for (let index = 0; index < numOfCharsToRemove; index++) {\n      sel.modify(\"extend\", \"backward\", \"character\");\n    }\n    const newRange = sel.getRangeAt(0);\n    newRange.deleteContents();\n\n    const el = this.getDocument().createElement(\"div\");\n    el.innerHTML = html;\n    const frag = this.getDocument().createDocumentFragment();\n    let node, lastNode;\n\n    while ((node = el.firstChild)) {\n      lastNode = frag.appendChild(node);\n    }\n    newRange.insertNode(frag);\n\n    // Preserve the selection\n    if (lastNode) {\n      newRange.setStart(lastNode, lastNode.length);\n      newRange.setEnd(lastNode, lastNode.length);\n      newRange.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(newRange);\n      sel.collapseToEnd();\n    }\n  }\n\n  stripHtml(html) {\n    const tmp = this.getDocument().createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n\n  getWindowSelection() {\n    if (this.tribute.collection.iframe) {\n      return this.tribute.collection.iframe.contentWindow.getSelection();\n    }\n\n    const rootNode = this.tribute.current.element.getRootNode();\n    if (rootNode.getSelection) return rootNode.getSelection();\n    else return window.getSelection();\n  }\n\n  getContentEditableSelectionStart(moveToEndOfWord) {\n    const sel = this.getWindowSelection();\n    if (!sel.isCollapsed) {\n      return { sel: null, range: null, direction: null };\n    }\n    const direction = sel.anchorOffset <= sel.focusOffset;\n    const range = sel.getRangeAt(0);\n    const selectedElem = sel.anchorNode;\n    const workingNodeContent = selectedElem.textContent;\n    const selectStartOffset = range.startOffset;\n    let nextChar =\n      workingNodeContent.length > selectStartOffset\n        ? workingNodeContent[selectStartOffset]\n        : null;\n    if (nextChar === null) {\n      if (selectedElem.nextSibling && selectedElem.nextSibling.textContent) {\n        const nextNodeText = selectedElem.nextSibling.textContent;\n        nextChar = nextNodeText.length ? nextNodeText[0] : null;\n      }\n    }\n    const nextCharIsSeparator =\n      !this.tribute.autocompleteSeparator ||\n      (nextChar && nextChar.match(this.tribute.autocompleteSeparator));\n    sel.collapseToEnd();\n    if (nextChar && !nextCharIsSeparator && moveToEndOfWord)\n      sel.modify(\"move\", \"forward\", \"word\");\n\n    return { sel, range, direction };\n  }\n\n  getWholeWordsUpToCharIndex(str, minLen) {\n    if (this.tribute.autocompleteSeparator) {\n      let searchPos = 0;\n      const arr = str\n        .split(this.tribute.autocompleteSeparator)\n        .filter(function (e) {\n          return e.trim();\n        });\n\n      for (let i = 0, len = arr.length; i < len; i++) {\n        const idx = str.indexOf(arr[i], searchPos);\n        searchPos += arr[i].length;\n\n        if (minLen >= idx && minLen <= idx + arr[i].length) {\n          minLen = idx + arr[i].length;\n          break;\n        }\n      }\n    }\n\n    const nextChar = str.length > minLen ? str[minLen] : \"\";\n    return [str.substring(0, minLen), nextChar];\n  }\n\n  getTextForCurrentSelection() {\n    const context = this.tribute.current;\n    let effectiveRange = null;\n    let nextChar = \"\";\n\n    if (!this.isContentEditable(context.element)) {\n      const textComponent = this.tribute.current.element;\n      if (textComponent) {\n        const startPos = textComponent.selectionStart;\n        const endPos = textComponent.selectionEnd;\n\n        if (textComponent.value && startPos >= 0 && startPos === endPos) {\n          const result = this.getWholeWordsUpToCharIndex(\n            textComponent.value,\n            startPos\n          );\n          effectiveRange = result[0];\n          nextChar = result[1];\n        }\n      }\n    } else {\n      const { sel, range, direction } =\n        this.getContentEditableSelectionStart(true);\n      if (sel) {\n        const selectedElem = sel.anchorNode;\n        const workingNodeContent = selectedElem.textContent;\n        const selectStartOffset = sel.getRangeAt(0).startOffset;\n        const lastChar = workingNodeContent[Math.max(0, selectStartOffset - 1)];\n        let addWhiteSpace = lastChar && lastChar !== lastChar.trim();\n        effectiveRange = sel.toString().trim();\n        nextChar =\n          workingNodeContent.length > selectStartOffset\n            ? workingNodeContent[selectStartOffset]\n            : \"\";\n\n        for (\n          let index = 0;\n          index < this.tribute.numberOfWordsInContextText;\n          index++\n        ) {\n          sel.modify(\"extend\", \"backward\", \"word\");\n          const newText = sel.toString();\n\n          if (\n            newText.length > effectiveRange.length &&\n            newText.endsWith(effectiveRange)\n          ) {\n            // Workarounds Firefox issue, where selection sometimes collapse or move instead of extend\n            effectiveRange = newText;\n          }\n        }\n        addWhiteSpace = addWhiteSpace && effectiveRange === effectiveRange.trimEnd();\n        effectiveRange += addWhiteSpace ? \" \" : \"\";\n\n        this.restoreSelection(sel, range, direction);\n      }\n    }\n\n    return { effectiveRange, nextChar };\n  }\n\n  getLastWordInText(text) {\n    if (this.tribute.autocompleteSeparator) {\n      const wordsArray = text.split(this.tribute.autocompleteSeparator);\n      if (!wordsArray.length) return \" \";\n      return wordsArray[wordsArray.length - 1];\n    }\n    return text;\n  }\n\n  escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n\n  getTriggerInfo(allowSpaces, isAutocomplete) {\n    let requireLeadingSpace = true;\n    const { effectiveRange, nextChar } = this.getTextForCurrentSelection();\n    if (effectiveRange === null) return null;\n    const lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange);\n\n    if (isAutocomplete) {\n      return {\n        mentionPosition:\n          effectiveRange.length - lastWordOfEffectiveRange.length,\n        mentionText: lastWordOfEffectiveRange,\n        fullText: effectiveRange,\n        nextChar: nextChar,\n        mentionTriggerChar: \"\",\n      };\n    }\n\n    if (effectiveRange !== undefined && effectiveRange !== null) {\n      let mostRecentTriggerCharPos = -1;\n      let triggerChar;\n\n      this.tribute.collection.forEach((config) => {\n        const c = config.trigger;\n        const regExpStr =\n          \"(\" +\n          (config.requireLeadingSpace ? \"\\\\s\" : \"\") +\n          this.escapeRegExp(c) +\n          \")(?!.*\\\\1)\";\n        const searchRes = effectiveRange.match(RegExp(regExpStr));\n        const idx = (() => {\n          if (searchRes)\n            return searchRes.index + (config.requireLeadingSpace ? 1 : 0);\n          if (effectiveRange.startsWith(c)) return 0;\n          return -1;\n        })();\n\n        if (idx > mostRecentTriggerCharPos) {\n          mostRecentTriggerCharPos = idx;\n          triggerChar = c;\n          requireLeadingSpace = config.requireLeadingSpace;\n        }\n      });\n\n      if (\n        mostRecentTriggerCharPos >= 0 &&\n        (mostRecentTriggerCharPos === 0 ||\n          !requireLeadingSpace ||\n          /\\s/.test(\n            effectiveRange.substring(\n              mostRecentTriggerCharPos - 1,\n              mostRecentTriggerCharPos\n            )\n          ))\n      ) {\n        const currentTriggerSnippet = effectiveRange.substring(\n          mostRecentTriggerCharPos + triggerChar.length,\n          effectiveRange.length\n        );\n\n        triggerChar = effectiveRange.substring(\n          mostRecentTriggerCharPos,\n          mostRecentTriggerCharPos + triggerChar.length\n        );\n        const firstSnippetChar = currentTriggerSnippet.substring(0, 1);\n        const leadingSpace =\n          currentTriggerSnippet.length > 0 &&\n          (firstSnippetChar === \" \" || firstSnippetChar === \"\\xA0\");\n\n        const trailingSpace =\n          currentTriggerSnippet !== currentTriggerSnippet.trimEnd();\n\n        if (!leadingSpace && (allowSpaces || !trailingSpace)) {\n          return {\n            mentionPosition: mostRecentTriggerCharPos,\n            mentionText: currentTriggerSnippet,\n            mentionTriggerChar: triggerChar,\n            fullText: effectiveRange,\n            nextChar: \"\",\n          };\n        }\n      }\n    }\n  }\n\n  isContentEditable(element) {\n    return element.nodeName !== \"INPUT\" && element.nodeName !== \"TEXTAREA\";\n  }\n\n  isMenuOffScreen(coordinates, menuDimensions) {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    const doc = this.getDocument().documentElement;\n    const windowLeft =\n      (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    const windowTop =\n      (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n\n    const menuTop =\n      typeof coordinates.top === \"number\"\n        ? coordinates.top\n        : coordinates.bottom - menuDimensions.height;\n    const menuRight =\n      typeof coordinates.right === \"number\"\n        ? coordinates.right\n        : coordinates.left + menuDimensions.width;\n    const menuBottom =\n      typeof coordinates.bottom === \"number\"\n        ? coordinates.bottom\n        : coordinates.top + menuDimensions.height;\n    const menuLeft =\n      typeof coordinates.left === \"number\"\n        ? coordinates.left\n        : coordinates.right - menuDimensions.width;\n\n    return {\n      top: menuTop < Math.floor(windowTop),\n      right: menuRight > Math.ceil(windowLeft + windowWidth),\n      bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n      left: menuLeft < Math.floor(windowLeft),\n    };\n  }\n\n  getMenuDimensions() {\n    // Width of the menu depends of its contents and position\n    // We must check what its width would be without any obstruction\n    // This way, we can achieve good positioning for flipping the menu\n    const dimensions = {\n      width: null,\n      height: null,\n    };\n\n    this.tribute.menu.style.top = `0px`;\n    this.tribute.menu.style.left = `0px`;\n    this.tribute.menu.style.right = null;\n    this.tribute.menu.style.bottom = null;\n    this.tribute.menu.style.position = `fixed`;\n    this.tribute.menu.style.visibility = `hidden`;\n    this.tribute.menu.style.display = `block`;\n\n    dimensions.width = this.tribute.menu.offsetWidth;\n    dimensions.height = this.tribute.menu.offsetHeight;\n\n    this.tribute.menu.style.display = `none`;\n    this.tribute.menu.style.visibility = `visible`;\n\n    return dimensions;\n  }\n\n  getTextAreaOrInputUnderlinePosition(element, position, _flipped) {\n    const properties = [\n      \"direction\",\n      \"boxSizing\",\n      \"width\",\n      \"height\",\n      \"overflowX\",\n      \"overflowY\",\n      \"borderTopWidth\",\n      \"borderRightWidth\",\n      \"borderBottomWidth\",\n      \"borderLeftWidth\",\n      \"borderStyle\",\n      \"paddingTop\",\n      \"paddingRight\",\n      \"paddingBottom\",\n      \"paddingLeft\",\n      \"fontStyle\",\n      \"fontVariant\",\n      \"fontWeight\",\n      \"fontStretch\",\n      \"fontSize\",\n      \"fontSizeAdjust\",\n      \"lineHeight\",\n      \"fontFamily\",\n      \"textAlign\",\n      \"textTransform\",\n      \"textIndent\",\n      \"textDecoration\",\n      \"letterSpacing\",\n      \"wordSpacing\",\n    ];\n\n    const div = this.getDocument().createElement(\"div\");\n    div.id = \"input-textarea-caret-position-mirror-div\";\n    this.getDocument().body.appendChild(div);\n\n    const style = div.style;\n    const computed = window.getComputedStyle\n      ? getComputedStyle(element)\n      : element.currentStyle;\n\n    style.whiteSpace = \"pre-wrap\";\n    if (element.nodeName !== \"INPUT\") {\n      style.wordWrap = \"break-word\";\n    }\n\n    // position off-screen\n    style.position = \"absolute\";\n    style.visibility = \"hidden\";\n\n    // transfer the element's properties to the div\n    properties.forEach((prop) => {\n      style[prop] = computed[prop];\n    });\n\n    const span0 = this.getDocument().createElement(\"span\");\n    span0.textContent = element.value.substring(0, position);\n    div.appendChild(span0);\n\n    if (element.nodeName === \"INPUT\") {\n      div.textContent = div.textContent.replace(/\\s/g, \" \");\n    }\n\n    //Create a span in the div that represents where the cursor\n    //should be\n    const span = this.getDocument().createElement(\"span\");\n    //we give it no content as this represents the cursor\n    div.appendChild(span);\n\n    const span2 = this.getDocument().createElement(\"span\");\n    span2.textContent = element.value.substring(position, position + 1);\n    div.appendChild(span2);\n\n    const rect = element.getBoundingClientRect();\n\n    //position the div exactly over the element\n    //so we can get the bounding client rect for the span and\n    //it should represent exactly where the cursor is\n    div.style.position = \"fixed\";\n    div.style.left = rect.left + \"px\";\n    div.style.top = rect.top + \"px\";\n    div.style.width = rect.width + \"px\";\n    div.style.height = rect.height + \"px\";\n    div.scrollTop = element.scrollTop;\n\n    const spanRect = span.getBoundingClientRect();\n    const divRect = div.getBoundingClientRect();\n    this.getDocument().body.removeChild(div);\n    const clamp = function (number, min, max) {\n      return Math.max(min, Math.min(number, max));\n    };\n    const finalRect = {\n      height: Math.min(divRect.height, spanRect.height),\n      left: clamp(spanRect.left, divRect.left, divRect.left + divRect.width),\n      top: clamp(spanRect.top, divRect.top, divRect.top + divRect.height),\n    };\n    return this.getFixedCoordinatesRelativeToRect(finalRect);\n  }\n\n  getContentEditableCaretPosition(_selectedNodePosition) {\n    const { sel, range, direction } =\n      this.getContentEditableSelectionStart(false);\n    const newRange = sel.getRangeAt(0);\n    // restore selection\n    this.restoreSelection(sel, range, direction);\n    let rect = newRange.getBoundingClientRect();\n    if (sel.anchorNode.parentNode) {\n      const parentNodeRect = sel.anchorNode.parentNode.getBoundingClientRect();\n      const clamp = function (number, min, max) {\n        return Math.max(min, Math.min(number, max));\n      };\n      rect = {\n        height: Math.min(parentNodeRect.height, rect.height),\n        left: clamp(\n          rect.left,\n          parentNodeRect.left,\n          parentNodeRect.left + parentNodeRect.width\n        ),\n        top: clamp(\n          rect.top,\n          parentNodeRect.top,\n          parentNodeRect.top + parentNodeRect.height\n        ),\n      };\n    }\n    return this.getFixedCoordinatesRelativeToRect(rect);\n  }\n\n  getFixedCoordinatesRelativeToRect(rect) {\n    const coordinates = {\n      position: \"fixed\",\n      left: rect.left,\n      top: rect.top + rect.height,\n    };\n\n    const menuDimensions = this.getMenuDimensions();\n\n    const availableSpaceOnTop = rect.top;\n    const availableSpaceOnBottom =\n      window.innerHeight - (rect.top + rect.height);\n\n    //check to see where's the right place to put the menu vertically\n    if (availableSpaceOnBottom < menuDimensions.height) {\n      if (\n        availableSpaceOnTop >= menuDimensions.height ||\n        availableSpaceOnTop > availableSpaceOnBottom\n      ) {\n        coordinates.top = \"auto\";\n        coordinates.bottom = window.innerHeight - rect.top;\n        if (availableSpaceOnBottom < menuDimensions.height) {\n          coordinates.maxHeight = availableSpaceOnTop;\n        }\n      } else {\n        if (availableSpaceOnTop < menuDimensions.height) {\n          coordinates.maxHeight = availableSpaceOnBottom;\n        }\n      }\n    }\n\n    const availableSpaceOnLeft = rect.left;\n    const availableSpaceOnRight = window.innerWidth - rect.left;\n\n    //check to see where's the right place to put the menu horizontally\n    if (availableSpaceOnRight < menuDimensions.width) {\n      if (\n        availableSpaceOnLeft >= menuDimensions.width ||\n        availableSpaceOnLeft > availableSpaceOnRight\n      ) {\n        coordinates.left = \"auto\";\n        coordinates.right = window.innerWidth - rect.left;\n        if (availableSpaceOnRight < menuDimensions.width) {\n          coordinates.maxWidth = availableSpaceOnLeft;\n        }\n      } else {\n        if (availableSpaceOnLeft < menuDimensions.width) {\n          coordinates.maxWidth = availableSpaceOnRight;\n        }\n      }\n    }\n\n    return coordinates;\n  }\n\n  scrollIntoView(_elem) {\n    const reasonableBuffer = 20;\n    const maxScrollDisplacement = 100;\n    let clientRect;\n    let e = this.menu;\n\n    if (typeof e === \"undefined\") return;\n\n    while (clientRect === undefined || clientRect.height === 0) {\n      clientRect = e.getBoundingClientRect();\n\n      if (clientRect.height === 0) {\n        e = e.childNodes[0];\n        if (e === undefined || !e.getBoundingClientRect) {\n          return;\n        }\n      }\n    }\n\n    const elemTop = clientRect.top;\n    const elemBottom = elemTop + clientRect.height;\n\n    if (elemTop < 0) {\n      window.scrollTo(\n        0,\n        window.pageYOffset + clientRect.top - reasonableBuffer\n      );\n    } else if (elemBottom > window.innerHeight) {\n      let maxY = window.pageYOffset + clientRect.top - reasonableBuffer;\n\n      if (maxY - window.pageYOffset > maxScrollDisplacement) {\n        maxY = window.pageYOffset + maxScrollDisplacement;\n      }\n\n      let targetY = window.pageYOffset - (window.innerHeight - elemBottom);\n\n      if (targetY > maxY) {\n        targetY = maxY;\n      }\n\n      window.scrollTo(0, targetY);\n    }\n  }\n\n  restoreSelection(sel, range, directionFwd = true) {\n    sel.removeAllRanges();\n\n    if (directionFwd) {\n      sel.addRange(range);\n    } else {\n      const endRange = range.cloneRange();\n      endRange.collapse(false);\n      sel.addRange(endRange);\n      sel.extend(range.startContainer, range.startOffset);\n    }\n  }\n}\n\nexport default TributeRange;\n","/*eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }]*/\n\n// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.search = this;\n  }\n\n  match(pattern, string, opts) {\n    opts = opts || {};\n    const pre = opts.pre || \"\",\n      post = opts.post || \"\",\n      compareString = (opts.caseSensitive && string) || string.toLowerCase();\n\n    if (opts.skip) {\n      return { rendered: string, score: 0 };\n    }\n\n    pattern = (opts.caseSensitive && pattern) || pattern.toLowerCase();\n\n    const patternCache = this.traverse(compareString, pattern, 0, 0, []);\n    if (!patternCache) {\n      return null;\n    }\n    return {\n      rendered: this.render(string, patternCache.cache, pre, post),\n      score: patternCache.score,\n    };\n  }\n\n  traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n    if (this.tribute.autocompleteMode && this.tribute.autocompleteSeparator) {\n      // if the pattern search at end\n      pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n    }\n\n    if (pattern.length === patternIndex) {\n      // calculate score and copy the cache containing the indices where it's found\n      return {\n        score: this.calculateScore(patternCache),\n        cache: patternCache.slice(),\n      };\n    }\n\n    // if string at end or remaining pattern > remaining string\n    if (\n      string.length === stringIndex ||\n      pattern.length - patternIndex > string.length - stringIndex\n    ) {\n      return undefined;\n    }\n\n    const c = pattern[patternIndex];\n    let index = string.indexOf(c, stringIndex);\n    let best;\n    let temp;\n\n    while (index > -1) {\n      patternCache.push(index);\n      temp = this.traverse(\n        string,\n        pattern,\n        index + 1,\n        patternIndex + 1,\n        patternCache\n      );\n      patternCache.pop();\n\n      // if downstream traversal failed, return best answer so far\n      if (!temp) {\n        return best;\n      }\n\n      if (!best || best.score < temp.score) {\n        best = temp;\n      }\n\n      index = string.indexOf(c, index + 1);\n    }\n\n    return best;\n  }\n\n  calculateScore(patternCache) {\n    let score = 0;\n    let temp = 1;\n\n    patternCache.forEach((index, i) => {\n      if (i > 0) {\n        if (patternCache[i - 1] + 1 === index) {\n          temp += temp + 1;\n        } else {\n          temp = 1;\n        }\n      }\n\n      score += temp;\n    });\n\n    return score;\n  }\n\n  render(string, indices, pre, post) {\n    let rendered = string.substring(0, indices[0]);\n\n    indices.forEach((index, i) => {\n      rendered +=\n        pre +\n        string[index] +\n        post +\n        string.substring(\n          index + 1,\n          indices[i + 1] ? indices[i + 1] : string.length\n        );\n    });\n\n    return rendered;\n  }\n\n  filter(pattern, arr, opts) {\n    opts = opts || {};\n    return arr\n      .reduce((prev, element, idx, _arr) => {\n        let str = element;\n\n        if (opts.extract) {\n          str = opts.extract(element);\n\n          if (!str) {\n            // take care of undefineds / nulls / etc.\n            str = \"\";\n          }\n        }\n\n        const rendered = this.match(pattern, str, opts);\n\n        if (rendered !== null) {\n          prev[prev.length] = {\n            string: rendered.rendered,\n            score: rendered.score,\n            index: idx,\n            original: element,\n          };\n        }\n\n        return prev;\n      }, [])\n\n      .sort((a, b) => {\n        const compare = b.score - a.score;\n        if (compare) return compare;\n        return a.index - b.index;\n      });\n  }\n}\n\nexport default TributeSearch;\n","import TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    loadingItemTemplate = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = RegExp(/\\s+/),\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = undefined,\n    menuShowMinLength = 0,\n    keys = null,\n    numberOfWordsInContextText = 5,\n    supportRevert = false,\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.lastReplacement = null;\n    this.isActive = false;\n    this.activationPending = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n    this.numberOfWordsInContextText = numberOfWordsInContextText;\n    this.supportRevert = supportRevert;\n    if (keys) {\n      TributeEvents.keys = keys;\n    }\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: ((t) => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function () {\n                return \"<li>No Match Found!</li>\";\n              }\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          // useful for when values is an async function\n          loadingItemTemplate: loadingItemTemplate,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength,\n        },\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map((item) => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: ((t) => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function () {\n                return \"<li>No Match Found!</li>\";\n              }\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          loadingItemTemplate: item.loadingItemTemplate,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength,\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive !== val) {\n      this._isActive = val;\n      if (this.current.element) {\n        const noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map((config) => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    /* global jQuery */\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      const length = el.length;\n      for (let i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (element.contentEditable) {\n        element.contentEditable = true;\n      } else {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName);\n      }\n    }\n  }\n\n  createMenu(containerClass, element) {\n    const properties = [\n      \"fontStyle\",\n      \"fontVariant\",\n      \"fontWeight\",\n      \"fontStretch\",\n      \"fontSizeAdjust\",\n      \"fontFamily\",\n    ];\n    const computed = window.getComputedStyle\n      ? getComputedStyle(element)\n      : element.currentStyle;\n    const wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.setAttribute(\"tabindex\", \"0\");\n    wrapper.appendChild(ul);\n    wrapper.style.fontSize =\n      Math.round(parseInt(computed.fontSize) * 0.9) + \"px\";\n    wrapper.style.display = \"none\";\n\n    properties.forEach((prop) => {\n      wrapper.style[prop] = computed[prop];\n    });\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(\n        this.current.collection.containerClass,\n        element\n      );\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.activationPending = true;\n    this.menuSelected = 0;\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = (values, forceReplace) => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.activationPending) {\n        return;\n      }\n      this.activationPending = false;\n      // Element is no longer in focus - don't show menu\n      if (this.range.getDocument().activeElement !== this.current.element) {\n        return;\n      }\n\n      if (forceReplace) {\n        // Do force replace - don't show menu\n        this.current.mentionPosition -= forceReplace.length;\n        this.current.mentionText = this.current.fullText.slice(-forceReplace.length);\n        this.replaceText(forceReplace.text, null, null);\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip || false,\n        caseSensitive:\n          this.current.collection.searchOpts.caseSensitive || false,\n        extract: (el) => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        },\n      });\n\n      items = items.slice(0, this.current.collection.menuItemLimit);\n\n      this.current.filteredItems = items;\n\n      const ul = this.menu.querySelector(\"ul\");\n      let showMenu = false;\n\n      if (!items.length) {\n        const noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu,\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          showMenu = false;\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n          showMenu = true;\n        }\n      } else {\n        ul.innerHTML = \"\";\n        const fragment = this.range.getDocument().createDocumentFragment();\n\n        items.forEach((item, index) => {\n          const li = this.range.getDocument().createElement(\"li\");\n          li.setAttribute(\"data-index\", index);\n          li.className = this.current.collection.itemClass;\n          li.addEventListener(\n            \"mouseover\",\n            function (index) {\n              this.events.setActiveLi(index);\n            }.bind(this, index)\n          );\n\n          if (this.menuSelected === index) {\n            li.classList.add(this.current.collection.selectClass);\n          }\n          li.innerHTML = this.current.collection.menuItemTemplate(item);\n          fragment.appendChild(li);\n        });\n        ul.appendChild(fragment);\n        showMenu = true;\n      }\n      if (showMenu) {\n        this.isActive = true;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      if (this.current.collection.loadingItemTemplate) {\n        this.menu.querySelector(\"ul\").innerHTML =\n          this.current.collection.loadingItemTemplate;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n\n      this.current.collection.values(\n        this.current.mentionText,\n        processValues,\n        this.current.fullText,\n        this.current.nextChar\n      );\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (!this.events.updateSelection(element)) return;\n    if (element !== this.range.getDocument().activeElement) {\n      this.placeCaretAtEnd(element);\n      if (element.isContentEditable)\n        this.insertTextAtCursor(this.current.collection.trigger);\n      else this.insertAtCaret(element, this.current.collection.trigger);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.element = element;\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection !== \"undefined\" &&\n      typeof this.range.getDocument().createRange !== \"undefined\"\n    ) {\n      const range = this.range.getDocument().createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      const sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (\n      typeof this.range.getDocument().body.createTextRange !== \"undefined\"\n    ) {\n      const textRange = this.range.getDocument().body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    const sel = window.getSelection();\n    const range = sel.getRangeAt(0);\n    range.deleteContents();\n    const textNode = this.range.getDocument().createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    const scrollPos = textarea.scrollTop;\n    let caretPos = textarea.selectionStart;\n\n    const front = textarea.value.substring(0, caretPos);\n    const back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    if (this.menu) {\n      this.menu.remove();\n      this.menu = null;\n    }\n    this.isActive = false;\n    this.activationPending = false;\n    this.current = {};\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (!(typeof index !== \"number\" || isNaN(index) || !originalEvent.target)) {\n      const item = this.current.filteredItems[index];\n      const content = this.current.collection.selectTemplate(item);\n      if (content !== null) this.replaceText(content, originalEvent, item);\n    }\n    this.hideMenu();\n  }\n\n  replaceText(content, originalEvent, item) {\n    if (this.supportRevert) {\n      this.lastReplacement = {...this.current};\n      this.lastReplacement.content = content;\n    }\n\n    this.range.replaceTriggerText(content, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    const index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    const collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      const length = el.length;\n      for (let i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n\n  debounce(func, wait, option = { leading: true, trailing: true }) {\n    let timer = null;\n    return (...args) => {\n      const timerExpired = (callFunc) => {\n        timer = null;\n        if (callFunc) func.apply(this, args);\n      };\n      const callNow = option.leading && timer === null;\n      const timeoutFn = timerExpired.bind(this, !callNow && option.trailing);\n      clearTimeout(timer);\n      timer = setTimeout(timeoutFn, wait);\n      if (callNow) func.apply(this, args);\n    };\n  }\n}\n\nexport default Tribute;\n"],"names":["TributeEvents","constructor","tribute","this","events","static","bind","element","boundKeyDown","debounce","keydown","boundKeyUpInput","input","addEventListener","unbind","removeEventListener","instance","event","controlKeyPressed","keyProcessed","KeyboardEvent","modifiers","forEach","o","getModifierState","keys","key","code","isActive","callbacks","lastReplacement","hideMenu","cEvent","CustomEvent","iEvent","InputEvent","iEventHandle","inputType","startsWith","keyup","call","click","menu","contains","target","li","preventDefault","stopImmediatePropagation","nodeName","toLowerCase","parentNode","Error","selectItemAtIndex","getAttribute","length","updateSelection","keyCode","getKeyCode","isNaN","autocompleteMode","current","collection","trigger","triggers","find","charCodeAt","item","menuShowMinLength","mentionText","showMenuFor","which","data","mentionTriggerChar","NaN","el","info","range","getTriggerInfo","allowSpaces","mentionPosition","fullText","nextChar","Backspace","e","_el","content","replaceText","Enter","filteredItems","menuSelected","Escape","Tab","Space","spaceSelectsMatch","ArrowUp","count","selected","setActiveLi","scrollTop","scrollHeight","ArrowDown","index","lis","querySelectorAll","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","TributeMenuEvents","menuEvents","_menu","menuClickEvent","menuContainerScrollEvent","windowResizeEvent","windowBlurEvent","getDocument","window","menuContainer","TributeRange","iframe","contentWindow","document","positionMenuAtCaret","scrollTo","context","coordinates","positionMenu","isContentEditable","getContentEditableCaretPosition","getTextAreaOrInputUnderlinePosition","style","left","right","maxHeight","maxWidth","position","display","scrollIntoView","replaceTriggerText","text","originalEvent","detail","replaceEvent","replaceTextSuffix","pasteContentEditable","myField","textSuffix","stripHtml","startPos","endPos","value","substring","selectionStart","selectionEnd","dispatchEvent","bubbles","html","numOfCharsToRemove","sel","getContentEditableSelectionStart","strippedText","anchorOffset","anchorNode","nodeValue","pasteText","pasteHtml","pre","post","setStart","collapse","removeAllRanges","addRange","collapseToEnd","_range","modify","newRange","getRangeAt","deleteContents","createElement","innerHTML","frag","createDocumentFragment","node","lastNode","firstChild","appendChild","insertNode","setEnd","tmp","textContent","innerText","getWindowSelection","getSelection","rootNode","getRootNode","moveToEndOfWord","isCollapsed","direction","focusOffset","selectedElem","workingNodeContent","selectStartOffset","startOffset","nextSibling","nextNodeText","nextCharIsSeparator","autocompleteSeparator","match","getWholeWordsUpToCharIndex","str","minLen","searchPos","arr","split","filter","trim","len","idx","indexOf","getTextForCurrentSelection","effectiveRange","lastChar","Math","max","addWhiteSpace","toString","numberOfWordsInContextText","newText","endsWith","trimEnd","restoreSelection","textComponent","result","getLastWordInText","wordsArray","escapeRegExp","string","replace","isAutocomplete","requireLeadingSpace","lastWordOfEffectiveRange","mostRecentTriggerCharPos","triggerChar","config","c","regExpStr","searchRes","RegExp","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","trailingSpace","isMenuOffScreen","menuDimensions","windowWidth","innerWidth","windowHeight","innerHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","height","menuRight","width","menuBottom","menuLeft","floor","ceil","getMenuDimensions","dimensions","visibility","offsetWidth","offsetHeight","_flipped","div","id","body","computed","getComputedStyle","currentStyle","whiteSpace","wordWrap","prop","span0","span","span2","rect","spanRect","divRect","removeChild","clamp","number","min","finalRect","getFixedCoordinatesRelativeToRect","_selectedNodePosition","parentNodeRect","availableSpaceOnTop","availableSpaceOnBottom","availableSpaceOnLeft","availableSpaceOnRight","_elem","clientRect","undefined","childNodes","elemTop","elemBottom","maxY","targetY","directionFwd","endRange","cloneRange","extend","startContainer","TributeSearch","search","pattern","opts","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","push","pop","indices","reduce","prev","_arr","extract","original","sort","a","b","compare","Tribute","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","supportRevert","activationPending","defaultSelectTemplate","defaultMenuItemTemplate","t","console","warn","map","_isActive","val","noMatchEvent","matchItem","attach","jQuery","get","NodeList","HTMLCollection","Array","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","contentEditable","createMenu","wrapper","ul","className","fontSize","round","parseInt","currentMentionTextSnapshot","tributeMenu","processValues","forceReplace","activeElement","items","querySelector","showMenu","fragment","showMenuForCollection","collectionIndex","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","focus","createRange","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","_append","newValues","concat","append","appendCurrent","detach","_detach","setTimeout","removeAttribute","func","wait","option","leading","trailing","timer","args","timerExpired","callNow","timeoutFn","callFunc","apply","clearTimeout"],"mappings":"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"}