{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}\n\nif (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}\n","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\n      {\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 13,\n        value: \"ENTER\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      }\n    ];\n  }\n\n  static modifiers() {\n    return [\n      \"CapsLock\",\n      \"Control\",\n      \"Fn\",\n      \"Hyper\",\n      \"Meta\",\n      \"OS\",\n      \"Super\",\n      \"Symbol\",\n      \"Win\"\n    ];\n  }\n\n  bind(element) {\n    element.boundKeyDown = this.keydown.bind(element, this);\n    element.boundKeyUp = this.keyup.bind(element, this);\n    element.boundKeyPress = this.keypress.bind(element, this);\n    element.boundInput = this.input.bind(element, this);\n\n    element.addEventListener(\"keydown\", element.boundKeyDown, true);\n    element.addEventListener(\"keyup\", element.boundKeyUp, true);\n    element.addEventListener(\"keypress\", element.boundKeyPress, true);\n    element.addEventListener(\"input\", element.boundInput, true);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeyDown, true);\n    element.removeEventListener(\"keyup\", element.boundKeyUp, true);\n    element.removeEventListener(\"keypress\", element.boundKeyPress, true);\n    element.removeEventListener(\"input\", element.boundInput, true);\n\n    delete element.boundKeyDown;\n    delete element.boundKeyUp;\n    delete element.boundKeyPress;\n    delete element.boundInput;\n  }\n\n  keydown(instance, event) {\n    if (instance.shouldDeactivate(event)) {\n      instance.tribute.hideMenu();\n    }\n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          return;\n        }\n      });\n    }\n\n    if (instance.tribute.isActive)\n    {\n      TributeEvents.keys().forEach(o => {\n        if (o.key === event.keyCode) {\n          instance.callbacks()[o.value.toLowerCase()](event, this);\n        }\n      });\n    }\n  }\n\n  input(instance, event) {\n    if (event instanceof InputEvent) instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    let tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      let li = event.target;\n      event.preventDefault();\n      event.stopPropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        li = li.parentNode;\n        if (!li || li === tribute.menu) {\n          throw new Error(\"cannot find the <li> container for the click\");\n        }\n      }\n      \n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n      tribute.hideMenu();\n\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      tribute.current.externalTrigger = false;\n      setTimeout(() => tribute.hideMenu());\n    }\n  }\n\n  keypress(  instance, event) {\n    instance.keyup.call(this, instance, event);\n  }\n  \n  keyup(instance, event) {    \n    instance.updateSelection(this);\n    \n    if (event instanceof KeyboardEvent) {\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          return;\n        }\n      });\n    }\n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    if (!instance.tribute.isActive) {\n      let keyCode = instance.getKeyCode(instance, this, event);\n      if (keyCode && !isNaN(keyCode)) {\n        if (instance.tribute.autocompleteMode && String.fromCharCode(keyCode).match(/(\\w|\\s)/g)) {\n          instance.tribute.current.trigger = \"\"\n        }\n        else { \n          instance.tribute.current.trigger = instance.tribute.triggers().find(trigger => {\n            return trigger.charCodeAt(0) === keyCode;\n          });\n        }\n      } else if (instance.tribute.autocompleteMode && event instanceof InputEvent) {\n        instance.tribute.current.trigger = \"\";\n      }\n      instance.tribute.current.collection = instance.tribute.collection.find(item => {\n        return item.trigger === instance.tribute.current.trigger;\n      });\n    }\n\n    if (\n      instance.tribute.current.mentionText.length <\n      instance.tribute.current.collection.menuShowMinLength\n    ) {\n      return;\n    }\n\n    if (\n      instance.tribute.current.trigger ||\n      (instance.tribute.current.trigger === \"\" && instance.tribute.autocompleteMode)\n    ) {\n      instance.tribute.showMenuFor(this, true);\n    }\n  }\n\n  shouldDeactivate(event) {\n    let controlKeyPressed = false;\n    TributeEvents.keys().forEach(o => {\n      if (event.keyCode === o.key) controlKeyPressed = true;\n    });\n\n    if (controlKeyPressed) return false;\n    if (this.tribute.isActive) return true;\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info && info.mentionTriggerChar) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else if (event instanceof KeyboardEvent){\n      return event.keyCode || event.which || event.code;\n    }\n    return false;\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.fullText = info.fullText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n      this.tribute.current.info = info;\n    }\n  }\n\n  callbacks() {\n    return {\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n          this.tribute.hideMenu();\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.tribute.menuSelected--;\n            this.setActiveLi();\n          } else if (selected === 0) {\n            this.tribute.menuSelected = count - 1;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.tribute.menuSelected++;\n            this.setActiveLi();\n          } else if (count === selected) {\n            this.tribute.menuSelected = 0;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;\n","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.display = `block`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition + info.mentionText.length)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition + info.mentionText.length)\n            }\n\n            this.tribute.menu.style.top = `${coordinates.top}px`;\n            this.tribute.menu.style.left = `${coordinates.left}px`;\n            this.tribute.menu.style.right = `${coordinates.right}px`;\n            this.tribute.menu.style.bottom = `${coordinates.bottom}px`;\n            this.tribute.menu.style[\"max-heigh\"] = `${coordinates.maxHeight || 500}px`;\n            this.tribute.menu.style[\"max-width\"] = `${coordinates.maxWidth || 300}px`;\n            this.tribute.menu.style.position = `${coordinates.position || 'absolute'}`;\n            this.tribute.menu.style.display = `block`;\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n        } else {\n            this.tribute.menu.style.display = 'none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.tribute.current.info;//this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: {\n                    item: item,\n                    instance: context,\n                    context: info,\n                    event: originalEvent,\n                }\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let textEndsWithSpace = text !== text.trimEnd();\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + textSuffix.length + textEndsWithSpace\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textEndsWithSpace = text !== text.trimEnd();\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                text += textSuffix\n                let endPos = info.mentionPosition + info.mentionText.length + textEndsWithSpace\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.pasteHtml(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\n            context.element.dispatchEvent(replaceEvent)\n        }\n    }\n\n    pasteHtml(html, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n\n        sel.anchorNode.nodeValue = sel.anchorNode.nodeValue.substring(0, startPos)\n            + html + sel.anchorNode.nodeValue.substring(endPos, sel.anchorNode.nodeValue.length)\n        range.setStart(sel.anchorNode, startPos + html.length)\n        range.collapse(true)\n        sel.removeAllRanges()\n        sel.addRange(range)\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return this.tribute.current.element.getRootNode().getSelection();\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getWholeWordsUpToCharIndex(str, minLen)\n    {\n        var pos = 0;\n        var arr = str.split(this.tribute.autocompleteSeparator).filter(function (e) {return e.trim();});\n        var text = str;\n        for( var i = 0, len = arr.length; i < len; i++ ) {\n            var idx = str.indexOf(arr[i]);\n            pos = (pos + idx);\n            str = str.slice( idx );\n            if (minLen >= pos && minLen <= pos + arr[i].length)\n            {\n                minLen = pos + arr[i].length;\n                break\n            }\n        }\n    \n        return text.substring(0, minLen);\n    } \n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0)\n                    text = this.getWholeWordsUpToCharIndex(text, startPos);\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                    text = this.getWholeWordsUpToCharIndex(text, selectStartOffset);\n                }\n            }\n        }\n\n        return text\n    }\n\n    getLastWordInText(text) {\n        var separator = this.tribute.autocompleteSeparator ? this.tribute.autocompleteSeparator: /\\s+/;\n        var wordsArray = text.split(separator);\n\n        if (!wordsArray.length) return \" \";\n        return wordsArray[wordsArray.length - 1];\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n                mentionText: lastWordOfEffectiveRange,\n                fullText: effectiveRange,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /\\s/.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n       this.tribute.menu.style.top = `0px`;\n       this.tribute.menu.style.left = `0px`;\n       this.tribute.menu.style.right = null;\n       this.tribute.menu.style.bottom = null;\n       this.tribute.menu.style.position = `fixed`;\n       this.tribute.menu.style.visibility = `hidden`;\n       this.tribute.menu.style.display = `block`;\n\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.display = `none`\n       this.tribute.menu.style.visibility = `visible`;\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null && window.mozInnerScreenX !== undefined)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        // position off-screen\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        //NOT SURE WHY THIS IS HERE AND IT DOESNT SEEM HELPFUL\n        // if (isFirefox) {\n        //     style.width = `${(parseInt(computed.width) - 2)}px`\n        //     if (element.scrollHeight > parseInt(computed.height))\n        //         style.overflowY = 'scroll'\n        // } else {\n        //     style.overflow = 'hidden'\n        // }\n\n        let span0 = document.createElement('span')\n        span0.textContent =  element.value.substring(0, position)\n        div.appendChild(span0)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        //Create a span in the div that represents where the cursor\n        //should be\n        let span = this.getDocument().createElement('span')\n        //we give it no content as this represents the cursor\n        div.appendChild(span)\n\n        let span2 = this.getDocument().createElement('span');\n        span2.textContent = element.value.substring(position, position + 1);\n        div.appendChild(span2);\n\n        let rect = element.getBoundingClientRect()\n\n        //position the div exactly over the element\n        //so we can get the bounding client rect for the span and\n        //it should represent exactly where the cursor is\n        div.style.position = 'fixed';\n        div.style.left = rect.left + 'px';\n        div.style.top = rect.top + 'px';\n        div.style.width = rect.width + 'px';\n        div.style.height = rect.height + 'px';\n        div.scrollTop = element.scrollTop;\n\n        var spanRect = span.getBoundingClientRect();\n        this.getDocument().body.removeChild(div)\n        return this.getFixedCoordinatesRelativeToRect(spanRect);\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n\n        return this.getFixedCoordinatesRelativeToRect(rect);\n    }\n\n    getFixedCoordinatesRelativeToRect(rect) {\n        let coordinates = {\n            position: 'fixed',\n            left: rect.left,\n            top: rect.top + rect.height\n        }\n\n        let menuDimensions = this.getMenuDimensions()\n\n        var availableSpaceOnTop = rect.top;\n        var availableSpaceOnBottom = window.innerHeight - (rect.top + rect.height);\n\n        //check to see where's the right place to put the menu vertically\n        if (availableSpaceOnBottom < menuDimensions.height) {\n          if (availableSpaceOnTop >= menuDimensions.height || availableSpaceOnTop > availableSpaceOnBottom) {\n            coordinates.top = 'auto';\n            coordinates.bottom = window.innerHeight - rect.top;\n            if (availableSpaceOnBottom < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnTop;\n            }\n          } else {\n            if (availableSpaceOnTop < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnBottom;\n            }\n          }\n        }\n\n        var availableSpaceOnLeft = rect.left;\n        var availableSpaceOnRight = window.innerWidth - rect.left;\n\n        //check to see where's the right place to put the menu horizontally\n        if (availableSpaceOnRight < menuDimensions.width) {\n          if (availableSpaceOnLeft >= menuDimensions.width || availableSpaceOnLeft > availableSpaceOnRight) {\n            coordinates.left = 'auto';\n            coordinates.right = window.innerWidth - rect.left;\n            if (availableSpaceOnRight < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnLeft;\n            }\n          } else {\n            if (availableSpaceOnLeft < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnRight;\n            }\n          }\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best = { score : 0, cache : []}\n        let temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    loadingItemTemplate = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 0,\n    keys = null\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.isActive = false;\n    this.activationPending = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n    if (keys)\n    {\n      TributeEvents.keys = keys;\n    }\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          // useful for when values is an async function\n          loadingItemTemplate: loadingItemTemplate,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          loadingItemTemplate: item.loadingItemTemplate,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (element.contentEditable) {\n        element.contentEditable = true;\n      } else {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName);\n      }\n    }\n  }\n\n  createMenu(containerClass, element) {\n    let properties = ['fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n    'fontSizeAdjust', 'fontFamily'];\n    let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.setAttribute(\"tabindex\", \"0\"); \n    wrapper.appendChild(ul);\n    wrapper.style.fontSize = Math.round(parseInt(computed.fontSize) * 0.9) + 'px';\n    wrapper.style.display = \"none\";\n\n    properties.forEach(prop => {\n      wrapper.style[prop] = computed[prop]\n     })\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass, element);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.activationPending = true;\n    this.menuSelected = 0;\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = (values, forceReplace) => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.activationPending) {\n        return;\n      }\n      this.activationPending = false;\n      // Element is no longer in focus - don't show menu\n      if (document.activeElement !== this.current.element)\n      {\n        return;\n      }\n\n      if (forceReplace)\n      {\n        // Do force replace - don't show menu\n        this.current.info.mentionPosition -= forceReplace.length;\n        this.current.info.mentionText = \" \".repeat(forceReplace.length) + this.current.info.mentionText\n        this.replaceText(forceReplace.text, null, null);\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      this.current.filteredItems = items;\n\n      let ul = this.menu.querySelector(\"ul\");\n      let showMenu = false;\n\n      if (!items.length) {\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          showMenu = false;\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n            showMenu = true;\n        }\n      }\n      else\n      {\n        ul.innerHTML = \"\";\n        let fragment = this.range.getDocument().createDocumentFragment();\n\n        items.forEach((item, index) => {\n          let li = this.range.getDocument().createElement(\"li\");\n          li.setAttribute(\"data-index\", index);\n          li.className = this.current.collection.itemClass;\n          li.addEventListener(\"mousemove\", e => {\n            let [li, index] = this._findLiTarget(e.target);\n            if (e.movementY !== 0) {\n              this.events.setActiveLi(index);\n            }\n          });\n          if (this.menuSelected === index) {\n            li.classList.add(this.current.collection.selectClass);\n          }\n          li.innerHTML = this.current.collection.menuItemTemplate(item);\n          fragment.appendChild(li);\n        });\n        ul.appendChild(fragment);\n        showMenu = true;\n      }\n      if (showMenu)\n      {\n        this.isActive = true;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      if (this.current.collection.loadingItemTemplate) {\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n\n      this.current.collection.values(this.current.fullText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    this.activationPending = false;\n    if (this.menu)\n    {\n      this.menu.remove();\n      this.menu = null;\n    }\n    this.current = {};\n    this.isActive = false;\n    this.activationPending = false;\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index) || !originalEvent.target) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeyDown","keydown","bind","boundKeyUp","keyup","boundKeyPress","keypress","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","hideMenu","KeyboardEvent","modifiers","forEach","getModifierState","isActive","keys","key","keyCode","callbacks","toLowerCase","_this","InputEvent","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","getKeyCode","isNaN","autocompleteMode","String","fromCharCode","match","trigger","triggers","charCodeAt","collection","item","mentionText","menuShowMinLength","showMenuFor","controlKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","which","code","selectedPath","mentionSelectedPath","fullText","selectedOffset","mentionSelectedOffset","enter","e","_this2","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","getDocument","menuContainer","func","wait","immediate","timeout","context","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","display","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","maxHeight","maxWidth","position","scrollIntoView","body","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","textEndsWithSpace","trimEnd","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","nodeValue","getSelection","getRootNode","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","str","minLen","pos","arr","split","autocompleteSeparator","filter","trim","idx","indexOf","slice","selectedElem","workingNodeContent","textContent","selectStartOffset","getWholeWordsUpToCharIndex","textComponent","separator","wordsArray","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","triggerChar","mostRecentTriggerCharPos","config","c","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","regex","reversedStr","join","cidx","firstChar","triggerIdx","menuDimensions","windowWidth","innerWidth","windowHeight","innerHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","width","menuBottom","menuLeft","Math","floor","ceil","dimensions","visibility","offsetWidth","offsetHeight","flipped","div","createElement","id","appendChild","computed","whiteSpace","wordWrap","prop","span0","replace","span","span2","rect","spanRect","removeChild","getFixedCoordinatesRelativeToRect","selectedNodePosition","getMenuDimensions","availableSpaceOnTop","availableSpaceOnBottom","availableSpaceOnLeft","availableSpaceOnRight","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","temp","best","pop","indices","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","activationPending","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","console","warn","map","_isActive","val","noMatchEvent","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","fontSize","round","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","forceReplace","activeElement","repeat","replaceText","items","querySelector","showMenu","innerHTML","fragment","createDocumentFragment","_findLiTarget","movementY","positionMenuAtCaret","collectionIndex","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","deleteContents","textNode","createTextNode","insertNode","textarea","scrollPos","caretPos","front","back","content","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","matchItem"],"mappings":"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"}