{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}\n\nif (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}\n","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\n      {\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 13,\n        value: \"ENTER\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      }\n    ];\n  }\n\n  static modifiers() {\n    return [\n      \"CapsLock\",\n      \"Control\",\n      \"Fn\",\n      \"Hyper\",\n      \"Meta\",\n      \"OS\",\n      \"Super\",\n      \"Symbol\",\n      \"Win\"\n    ];\n  }\n\n  bind(element) {\n    element.boundKeyDown = this.keydown.bind(element, this);\n    element.boundKeyUp = this.keyup.bind(element, this);\n    element.boundInput = this.input.bind(element, this);\n\n    element.addEventListener(\"keydown\", element.boundKeyDown, true);\n    element.addEventListener(\"keyup\", element.boundKeyUp, true);\n    element.addEventListener(\"input\", element.boundInput, true);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeyDown, true);\n    element.removeEventListener(\"keyup\", element.boundKeyUp, true);\n    element.removeEventListener(\"input\", element.boundInput, true);\n\n    delete element.boundKeyDown;\n    delete element.boundKeyUp;\n    delete element.boundInput;\n  }\n\n  keydown(instance, event) {\n    if (instance.shouldDeactivate(event)) {\n      instance.tribute.hideMenu();\n    }\n    if (event instanceof KeyboardEvent) {\n      let controlKeyPressed = false;\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          controlKeyPressed = true;\n          return;\n        }\n      });\n      if (controlKeyPressed) return;\n    }\n\n    if (instance.tribute.isActive)\n    {\n      TributeEvents.keys().forEach(o => {\n        if (o.key === event.keyCode) {\n          instance.callbacks()[o.value.toLowerCase()](event, this);\n        }\n      });\n    }\n  }\n\n  input(instance, event) {\n    if (event instanceof CustomEvent) {\n      const str = event.detail.text;\n      event.keyCode = str.charCodeAt(str.length - 1);\n      setTimeout(instance.keyup.bind(this, instance, event), 0);\n    }\n    else instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    let tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      let li = event.target;\n      event.preventDefault();\n      event.stopPropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        li = li.parentNode;\n        if (!li || li === tribute.menu) {\n          throw new Error(\"cannot find the <li> container for the click\");\n        }\n      }\n\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      tribute.current.externalTrigger = false;\n      tribute.hideMenu();\n    }\n  }\n\n  keyup(instance, event) {    \n    if (!instance.updateSelection(this)) return;\n    const keyCode = instance.getKeyCode(instance, this, event);\n    // Check for modifiers keys\n    if (event instanceof KeyboardEvent) {\n      let controlKeyPressed = false;\n      TributeEvents.modifiers().forEach(o => {\n        if (event.getModifierState(o)) {\n          controlKeyPressed = true;\n          return;\n        }\n      });\n      // Check for control keys\n      TributeEvents.keys().forEach(o => {\n      if (o.key === keyCode) {\n        controlKeyPressed = true;\n        return;\n      }\n      });\n      if (controlKeyPressed) return;\n    }\n    \n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    // Get and validate trigger char\n    if (keyCode && !isNaN(keyCode)) {\n      if (instance.tribute.autocompleteMode && String.fromCharCode(keyCode).match(/(\\w|\\s)/g)) {\n        instance.tribute.current.trigger = \"\"\n      }\n      else {\n        instance.tribute.current.trigger = instance.tribute.triggers().find(trigger => {\n          return trigger.charCodeAt(0) === keyCode;\n        });\n      }\n    } else if (instance.tribute.autocompleteMode && event instanceof InputEvent) {\n      instance.tribute.current.trigger = \"\";\n    }\n    if (!(\n      instance.tribute.current.trigger ||\n      (instance.tribute.current.trigger === \"\" && instance.tribute.autocompleteMode))\n    ) return;\n\n    // Get and validate collection\n    instance.tribute.current.collection = instance.tribute.collection.find(item => {\n      return item.trigger === instance.tribute.current.trigger;\n    });\n    if (!instance.tribute.current.collection ||\n      instance.tribute.current.collection.menuShowMinLength >\n      instance.tribute.current.mentionText.length\n    ) {\n      return;\n    }\n\n    instance.tribute.showMenuFor(this, true);\n  }\n\n  shouldDeactivate(event) {\n    let controlKeyPressed = false;\n    TributeEvents.keys().forEach(o => {\n      if (event.keyCode === o.key) {\n        controlKeyPressed = true;\n        return;\n      }\n    });\n\n    if (controlKeyPressed) return false;\n    if (this.tribute.isActive) return true;\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info && info.mentionTriggerChar) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else {\n      return event.keyCode || event.which || event.code || false;\n    }\n  }\n\n  updateSelection(el) {\n    let success = false;\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.fullText = info.fullText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n      this.tribute.current.info = info;\n      success = true;\n    }\n    else {\n      this.tribute.current = {}\n    }\n    return success;\n  }\n\n  callbacks() {\n    return {\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.tribute.menuSelected--;\n            this.setActiveLi();\n          } else if (selected === 0) {\n            this.tribute.menuSelected = count - 1;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.tribute.menuSelected++;\n            this.setActiveLi();\n          } else if (count === selected) {\n            this.tribute.menuSelected = 0;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;\n","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.display = `block`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition + info.mentionText.length)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition + info.mentionText.length)\n            }\n\n            this.tribute.menu.style.top = `${coordinates.top}px`;\n            this.tribute.menu.style.left = `${coordinates.left}px`;\n            this.tribute.menu.style.right = `${coordinates.right}px`;\n            this.tribute.menu.style.bottom = `${coordinates.bottom}px`;\n            this.tribute.menu.style[\"max-heigh\"] = `${coordinates.maxHeight || 500}px`;\n            this.tribute.menu.style[\"max-width\"] = `${coordinates.maxWidth || 300}px`;\n            this.tribute.menu.style.position = `${coordinates.position || 'absolute'}`;\n            this.tribute.menu.style.display = `block`;\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n        } else {\n            this.tribute.menu.style.display = 'none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.tribute.current.info;//this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let detail = {\n                item: item,\n                instance: context,\n                context: info,\n                event: originalEvent,\n                text: text\n            }\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: detail\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let textEndsWithSpace = text !== text.trimEnd();\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text = this.stripHtml(text)\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + textSuffix.length + textEndsWithSpace\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textEndsWithSpace = text !== text.trimEnd();\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                text += textSuffix\n                let endPos = info.mentionPosition + info.mentionText.length + textEndsWithSpace\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.tribute.useHTML ? this.pasteHtml(text, info.mentionPosition, endPos) :\n                this.pasteText(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true, detail: detail }))\n            context.element.dispatchEvent(replaceEvent)\n        }\n    }\n\n    pasteHtml(html, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, startPos)\n        range.setEnd(sel.anchorNode, Math.min(endPos, sel.anchorNode.length))\n        range.deleteContents()\n\n        let el = this.getDocument().createElement('div')\n        el.innerHTML = html\n        let frag = this.getDocument().createDocumentFragment(),\n            node, lastNode\n        while ((node = el.firstChild)) {\n            lastNode = frag.appendChild(node)\n        }\n        range.insertNode(frag)\n\n        // Preserve the selection\n        if (lastNode) {\n            range = this.getDocument().createRange()\n            range.setStart(lastNode, lastNode.length)\n            range.collapse(true)\n            sel.removeAllRanges()\n            sel.addRange(range)\n            sel.collapseToEnd()\n        }\n    }\n\n    stripHtml(html) {\n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = html;\n        return tmp.textContent || tmp.innerText || \"\";\n    }\n\n    pasteText(html, startPos, endPos) {\n        text = this.stripHtml(html)\n        let range = this.getDocument().createRange()\n        let sel = this.getWindowSelection()\n        sel.anchorNode.nodeValue = sel.anchorNode.nodeValue.substring(0, startPos)\n            + text + sel.anchorNode.nodeValue.substring(endPos, sel.anchorNode.nodeValue.length)\n        range.setStart(sel.anchorNode, startPos + text.length)\n        range.collapse(true)\n        sel.removeAllRanges()\n        sel.addRange(range)\n        sel.collapseToEnd()\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return this.tribute.current.element.getRootNode().getSelection();\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getWholeWordsUpToCharIndex(str, minLen)\n    {\n        var pos = 0;\n        var arr = str.split(this.tribute.autocompleteSeparator).filter(function (e) {return e.trim();});\n        var text = str;\n        for( var i = 0, len = arr.length; i < len; i++ ) {\n            var idx = str.indexOf(arr[i]);\n            pos = (pos + idx);\n            str = str.slice( idx );\n            if (minLen >= pos && minLen <= pos + arr[i].length)\n            {\n                minLen = pos + arr[i].length;\n                break\n            }\n        }\n    \n        return text.substring(0, minLen);\n    } \n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0)\n                    text = this.getWholeWordsUpToCharIndex(text, startPos);\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0)\n                    text = this.getWholeWordsUpToCharIndex(text, selectStartOffset);\n                }\n            }\n        }\n\n        return text\n    }\n\n    getLastWordInText(text) {\n        var separator = this.tribute.autocompleteSeparator ? this.tribute.autocompleteSeparator: /\\s+/;\n        var wordsArray = text.split(separator);\n\n        if (!wordsArray.length) return \" \";\n        return wordsArray[wordsArray.length - 1];\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n                mentionText: lastWordOfEffectiveRange,\n                fullText: effectiveRange,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /\\s/.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n       this.tribute.menu.style.top = `0px`;\n       this.tribute.menu.style.left = `0px`;\n       this.tribute.menu.style.right = null;\n       this.tribute.menu.style.bottom = null;\n       this.tribute.menu.style.position = `fixed`;\n       this.tribute.menu.style.visibility = `hidden`;\n       this.tribute.menu.style.display = `block`;\n\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.display = `none`\n       this.tribute.menu.style.visibility = `visible`;\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null && window.mozInnerScreenX !== undefined)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        // position off-screen\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        //NOT SURE WHY THIS IS HERE AND IT DOESNT SEEM HELPFUL\n        // if (isFirefox) {\n        //     style.width = `${(parseInt(computed.width) - 2)}px`\n        //     if (element.scrollHeight > parseInt(computed.height))\n        //         style.overflowY = 'scroll'\n        // } else {\n        //     style.overflow = 'hidden'\n        // }\n\n        let span0 = document.createElement('span')\n        span0.textContent =  element.value.substring(0, position)\n        div.appendChild(span0)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        //Create a span in the div that represents where the cursor\n        //should be\n        let span = this.getDocument().createElement('span')\n        //we give it no content as this represents the cursor\n        div.appendChild(span)\n\n        let span2 = this.getDocument().createElement('span');\n        span2.textContent = element.value.substring(position, position + 1);\n        div.appendChild(span2);\n\n        let rect = element.getBoundingClientRect()\n\n        //position the div exactly over the element\n        //so we can get the bounding client rect for the span and\n        //it should represent exactly where the cursor is\n        div.style.position = 'fixed';\n        div.style.left = rect.left + 'px';\n        div.style.top = rect.top + 'px';\n        div.style.width = rect.width + 'px';\n        div.style.height = rect.height + 'px';\n        div.scrollTop = element.scrollTop;\n\n        let spanRect = span.getBoundingClientRect();\n        let divRect = div.getBoundingClientRect();\n        this.getDocument().body.removeChild(div)\n        let clamp =  function(number, min, max) {\n            return Math.max(min, Math.min(number, max));\n        }\n        let finalRect = {\n            height: Math.min(divRect.height, spanRect.height),\n            left: clamp(spanRect.left, divRect.left, divRect.left + divRect.width),\n            top: clamp( spanRect.top, divRect.top, divRect.top + divRect.height),\n        }\n        return this.getFixedCoordinatesRelativeToRect(finalRect);\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n\n        return this.getFixedCoordinatesRelativeToRect(rect);\n    }\n\n    getFixedCoordinatesRelativeToRect(rect) {\n        let coordinates = {\n            position: 'fixed',\n            left: rect.left,\n            top: rect.top + rect.height\n        }\n\n        let menuDimensions = this.getMenuDimensions()\n\n        var availableSpaceOnTop = rect.top;\n        var availableSpaceOnBottom = window.innerHeight - (rect.top + rect.height);\n\n        //check to see where's the right place to put the menu vertically\n        if (availableSpaceOnBottom < menuDimensions.height) {\n          if (availableSpaceOnTop >= menuDimensions.height || availableSpaceOnTop > availableSpaceOnBottom) {\n            coordinates.top = 'auto';\n            coordinates.bottom = window.innerHeight - rect.top;\n            if (availableSpaceOnBottom < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnTop;\n            }\n          } else {\n            if (availableSpaceOnTop < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnBottom;\n            }\n          }\n        }\n\n        var availableSpaceOnLeft = rect.left;\n        var availableSpaceOnRight = window.innerWidth - rect.left;\n\n        //check to see where's the right place to put the menu horizontally\n        if (availableSpaceOnRight < menuDimensions.width) {\n          if (availableSpaceOnLeft >= menuDimensions.width || availableSpaceOnLeft > availableSpaceOnRight) {\n            coordinates.left = 'auto';\n            coordinates.right = window.innerWidth - rect.left;\n            if (availableSpaceOnRight < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnLeft;\n            }\n          } else {\n            if (availableSpaceOnLeft < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnRight;\n            }\n          }\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best\n        let temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    loadingItemTemplate = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 0,\n    keys = null,\n    useHTML = true\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.isActive = false;\n    this.activationPending = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n    this.useHTML = useHTML;\n    if (keys)\n    {\n      TributeEvents.keys = keys;\n    }\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          // useful for when values is an async function\n          loadingItemTemplate: loadingItemTemplate,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          loadingItemTemplate: item.loadingItemTemplate,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (element.contentEditable) {\n        element.contentEditable = true;\n      } else {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName);\n      }\n    }\n  }\n\n  createMenu(containerClass, element) {\n    let properties = ['fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n    'fontSizeAdjust', 'fontFamily'];\n    let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.setAttribute(\"tabindex\", \"0\"); \n    wrapper.appendChild(ul);\n    wrapper.style.fontSize = Math.round(parseInt(computed.fontSize) * 0.9) + 'px';\n    wrapper.style.display = \"none\";\n\n    properties.forEach(prop => {\n      wrapper.style[prop] = computed[prop]\n     })\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass, element);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.activationPending = true;\n    this.menuSelected = 0;\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = (values, forceReplace) => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.activationPending) {\n        return;\n      }\n      this.activationPending = false;\n      // Element is no longer in focus - don't show menu\n      if (document.activeElement !== this.current.element)\n      {\n        return;\n      }\n\n      if (forceReplace)\n      {\n        // Do force replace - don't show menu\n        this.current.info.mentionPosition -= forceReplace.length;\n        this.current.info.mentionText = \" \".repeat(forceReplace.length) + this.current.info.mentionText\n        this.replaceText(forceReplace.text, null, null);\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      this.current.filteredItems = items;\n\n      let ul = this.menu.querySelector(\"ul\");\n      let showMenu = false;\n\n      if (!items.length) {\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          showMenu = false;\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n            showMenu = true;\n        }\n      }\n      else\n      {\n        ul.innerHTML = \"\";\n        let fragment = this.range.getDocument().createDocumentFragment();\n\n        items.forEach((item, index) => {\n          let li = this.range.getDocument().createElement(\"li\");\n          li.setAttribute(\"data-index\", index);\n          li.className = this.current.collection.itemClass;\n          li.addEventListener(\"mousemove\", e => {\n            let [li, index] = this._findLiTarget(e.target);\n            if (e.movementY !== 0) {\n              this.events.setActiveLi(index);\n            }\n          });\n          if (this.menuSelected === index) {\n            li.classList.add(this.current.collection.selectClass);\n          }\n          li.innerHTML = this.current.collection.menuItemTemplate(item);\n          fragment.appendChild(li);\n        });\n        ul.appendChild(fragment);\n        showMenu = true;\n      }\n      if (showMenu)\n      {\n        this.isActive = true;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      if (this.current.collection.loadingItemTemplate) {\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n\n      this.current.collection.values(this.current.fullText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    if (this.menu)\n    {\n      this.menu.remove();\n      this.menu = null;\n    }\n    this.isActive = false;\n    this.activationPending = false;\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    this.hideMenu();\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index) || !originalEvent.target) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeyDown","keydown","bind","boundKeyUp","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","hideMenu","KeyboardEvent","controlKeyPressed","modifiers","forEach","getModifierState","isActive","keys","key","keyCode","callbacks","toLowerCase","_this","str","text","charCodeAt","setTimeout","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","updateSelection","getKeyCode","allowSpaces","hasTrailingSpace","isNaN","autocompleteMode","String","fromCharCode","match","trigger","triggers","InputEvent","collection","item","menuShowMinLength","mentionText","showMenuFor","el","info","range","getTriggerInfo","mentionTriggerChar","which","code","success","selectedPath","mentionSelectedPath","fullText","selectedOffset","mentionSelectedOffset","enter","e","_this2","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","getDocument","menuContainer","func","wait","immediate","timeout","context","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","display","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","maxHeight","maxWidth","position","scrollIntoView","body","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","requireLeadingSpace","originalEvent","replaceEvent","textEndsWithSpace","trimEnd","replaceTextSuffix","endPos","useHTML","pasteHtml","pasteText","myField","textSuffix","stripHtml","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","Math","min","deleteContents","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","collapseToEnd","tmp","textContent","innerText","nodeValue","getSelection","getRootNode","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","minLen","pos","arr","split","autocompleteSeparator","filter","trim","idx","indexOf","slice","selectedElem","workingNodeContent","selectStartOffset","getWholeWordsUpToCharIndex","textComponent","separator","wordsArray","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","triggerChar","mostRecentTriggerCharPos","config","c","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","regex","reversedStr","join","cidx","firstChar","triggerIdx","menuDimensions","windowWidth","innerWidth","windowHeight","innerHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","width","menuBottom","menuLeft","floor","ceil","dimensions","visibility","offsetWidth","offsetHeight","flipped","div","id","computed","whiteSpace","wordWrap","prop","span0","replace","span","span2","rect","spanRect","divRect","removeChild","clamp","number","max","finalRect","getFixedCoordinatesRelativeToRect","selectedNodePosition","getMenuDimensions","availableSpaceOnTop","availableSpaceOnBottom","availableSpaceOnLeft","availableSpaceOnRight","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","best","temp","pop","indices","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","activationPending","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","console","warn","map","_isActive","val","noMatchEvent","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","fontSize","round","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","forceReplace","activeElement","repeat","replaceText","items","querySelector","showMenu","fragment","_findLiTarget","movementY","positionMenuAtCaret","collectionIndex","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","content","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","matchItem"],"mappings":"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"}